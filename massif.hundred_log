desc: --massif-out-file=./massif.hundred_log --time-unit=B
cmd: ./target/debug/batch-processor
time_unit: B
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=4448
mem_heap_B=176
mem_heap_extra_B=32
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=7456
mem_heap_B=560
mem_heap_extra_B=32
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=3
#-----------
time=40232
mem_heap_B=33328
mem_heap_extra_B=40
mem_stacks_B=0
heap_tree=detailed
n3: 33328 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 32768 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
 n1: 472 0x1A88DC: alloc::alloc::alloc (alloc.rs:99)
  n1: 472 0x1A8A1C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 472 0x1A8BC8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:257)
    n1: 472 0x1A95A1: do_alloc<alloc::alloc::Global> (alloc.rs:15)
     n1: 472 0x1A95A1: hashbrown::raw::RawTableInner::new_uninitialized (mod.rs:1534)
      n1: 472 0x1A992B: hashbrown::raw::RawTableInner::fallible_with_capacity (mod.rs:1572)
       n1: 472 0x16BEEE: prepare_resize<alloc::alloc::Global> (mod.rs:2633)
        n1: 472 0x16BEEE: resize_inner<alloc::alloc::Global> (mod.rs:2829)
         n1: 472 0x16BEEE: reserve_rehash_inner<alloc::alloc::Global> (mod.rs:2719)
          n1: 472 0x16BEEE: hashbrown::raw::RawTable<T,A>::reserve_rehash (mod.rs:1045)
           n1: 472 0x16E5C4: hashbrown::raw::RawTable<T,A>::reserve (mod.rs:993)
            n1: 472 0x16DDAD: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (mod.rs:1206)
             n1: 472 0x1891F7: find_or_find_insert_slot<opentelemetry::common::Key, opentelemetry::common::Value, std::hash::random::RandomState, alloc::alloc::Global, opentelemetry::common::Key> (map.rs:1810)
              n1: 472 0x1891F7: hashbrown::map::HashMap<K,V,S,A>::insert (map.rs:1790)
               n2: 472 0x17BFB6: std::collections::hash::map::HashMap<K,V,S>::insert (map.rs:1169)
                n1: 472 0x16641A: opentelemetry_sdk::resource::Resource::from_detectors (mod.rs:150)
                 n1: 472 0x16604B: opentelemetry_sdk::resource::Resource::builder (mod.rs:64)
                  n1: 472 0x14C6B6: <opentelemetry_stdout::logs::exporter::LogExporter as core::default::Default>::default (exporter.rs:19)
                   n1: 472 0x14B43F: batch_processor::main (main.rs:10)
                    n1: 472 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                     n1: 472 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                      n1: 472 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                       n1: 472 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 472 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                         n1: 472 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                          n1: 472 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                           n1: 472 0x205B06: {closure#1} (rt.rs:174)
                            n1: 472 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                             n1: 472 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                              n1: 472 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                               n1: 472 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                n1: 472 0x124439: std::rt::lang_start (rt.rs:194)
                                 n0: 472 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
                n0: 0 in 2 places, all below massif's threshold (1.00%)
 n0: 88 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=4
#-----------
time=45704
mem_heap_B=38002
mem_heap_extra_B=422
mem_stacks_B=0
heap_tree=detailed
n4: 38002 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 34816 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n2: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n1: 640 0x1303C8: new<std::sync::mpmc::counter::Counter<std::sync::mpmc::array::Channel<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>> (boxed.rs:256)
         n1: 640 0x1303C8: std::sync::mpmc::counter::new (counter.rs:21)
          n1: 640 0x14710A: std::sync::mpmc::sync_channel (mod.rs:256)
           n1: 640 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
            n1: 640 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
             n1: 640 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
              n1: 640 0x14B57C: batch_processor::main (main.rs:11)
               n1: 640 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                n1: 640 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                 n1: 640 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                  n1: 640 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 640 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                    n1: 640 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                     n1: 640 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                      n1: 640 0x205B06: {closure#1} (rt.rs:174)
                       n1: 640 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                        n1: 640 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                         n1: 640 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                          n1: 640 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                           n1: 640 0x124439: std::rt::lang_start (rt.rs:194)
                            n0: 640 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
        n1: 640 0x130888: new<std::sync::mpmc::counter::Counter<std::sync::mpmc::array::Channel<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>> (boxed.rs:256)
         n1: 640 0x130888: std::sync::mpmc::counter::new (counter.rs:21)
          n1: 640 0x146D6A: std::sync::mpmc::sync_channel (mod.rs:256)
           n1: 640 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
            n1: 640 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
             n1: 640 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
              n1: 640 0x14B57C: batch_processor::main (main.rs:11)
               n1: 640 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                n1: 640 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                 n1: 640 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                  n1: 640 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 640 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                    n1: 640 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                     n1: 640 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                      n1: 640 0x205B06: {closure#1} (rt.rs:174)
                       n1: 640 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                        n1: 640 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                         n1: 640 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                          n1: 640 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                           n1: 640 0x124439: std::rt::lang_start (rt.rs:194)
                            n0: 640 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
 n1: 960 0x1A88DC: alloc::alloc::alloc (alloc.rs:99)
  n1: 960 0x1A8A1C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 960 0x1A8BC8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:257)
    n1: 960 0x1A95A1: do_alloc<alloc::alloc::Global> (alloc.rs:15)
     n1: 960 0x1A95A1: hashbrown::raw::RawTableInner::new_uninitialized (mod.rs:1534)
      n1: 960 0x1A992B: hashbrown::raw::RawTableInner::fallible_with_capacity (mod.rs:1572)
       n1: 960 0x16BEEE: prepare_resize<alloc::alloc::Global> (mod.rs:2633)
        n1: 960 0x16BEEE: resize_inner<alloc::alloc::Global> (mod.rs:2829)
         n1: 960 0x16BEEE: reserve_rehash_inner<alloc::alloc::Global> (mod.rs:2719)
          n1: 960 0x16BEEE: hashbrown::raw::RawTable<T,A>::reserve_rehash (mod.rs:1045)
           n1: 960 0x16E5C4: hashbrown::raw::RawTable<T,A>::reserve (mod.rs:993)
            n1: 960 0x16DDAD: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (mod.rs:1206)
             n1: 960 0x1891F7: find_or_find_insert_slot<opentelemetry::common::Key, opentelemetry::common::Value, std::hash::random::RandomState, alloc::alloc::Global, opentelemetry::common::Key> (map.rs:1810)
              n1: 960 0x1891F7: hashbrown::map::HashMap<K,V,S,A>::insert (map.rs:1790)
               n2: 960 0x17BFB6: std::collections::hash::map::HashMap<K,V,S>::insert (map.rs:1169)
                n1: 716 0x16641A: opentelemetry_sdk::resource::Resource::from_detectors (mod.rs:150)
                 n2: 716 0x16604B: opentelemetry_sdk::resource::Resource::builder (mod.rs:64)
                  n1: 472 0x14C6B6: <opentelemetry_stdout::logs::exporter::LogExporter as core::default::Default>::default (exporter.rs:19)
                   n1: 472 0x14B43F: batch_processor::main (main.rs:10)
                    n1: 472 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                     n1: 472 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                      n1: 472 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                       n1: 472 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 472 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                         n1: 472 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                          n1: 472 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                           n1: 472 0x205B06: {closure#1} (rt.rs:174)
                            n1: 472 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                             n1: 472 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                              n1: 472 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                               n1: 472 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                n1: 472 0x124439: std::rt::lang_start (rt.rs:194)
                                 n0: 472 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
                  n0: 244 in 1 place, below massif's threshold (1.00%)
                n0: 244 in 2 places, all below massif's threshold (1.00%)
 n0: 946 in 15 places, all below massif's threshold (1.00%)
#-----------
snapshot=5
#-----------
time=50344
mem_heap_B=38282
mem_heap_extra_B=446
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=54344
mem_heap_B=38186
mem_heap_extra_B=430
mem_stacks_B=0
heap_tree=detailed
n5: 38186 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 34816 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n2: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n1: 640 0x1303C8: new<std::sync::mpmc::counter::Counter<std::sync::mpmc::array::Channel<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>> (boxed.rs:256)
         n1: 640 0x1303C8: std::sync::mpmc::counter::new (counter.rs:21)
          n1: 640 0x14710A: std::sync::mpmc::sync_channel (mod.rs:256)
           n1: 640 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
            n1: 640 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
             n1: 640 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
              n1: 640 0x14B57C: batch_processor::main (main.rs:11)
               n1: 640 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                n1: 640 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                 n1: 640 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                  n1: 640 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 640 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                    n1: 640 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                     n1: 640 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                      n1: 640 0x205B06: {closure#1} (rt.rs:174)
                       n1: 640 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                        n1: 640 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                         n1: 640 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                          n1: 640 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                           n1: 640 0x124439: std::rt::lang_start (rt.rs:194)
                            n0: 640 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
        n1: 640 0x130888: new<std::sync::mpmc::counter::Counter<std::sync::mpmc::array::Channel<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>> (boxed.rs:256)
         n1: 640 0x130888: std::sync::mpmc::counter::new (counter.rs:21)
          n1: 640 0x146D6A: std::sync::mpmc::sync_channel (mod.rs:256)
           n1: 640 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
            n1: 640 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
             n1: 640 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
              n1: 640 0x14B57C: batch_processor::main (main.rs:11)
               n1: 640 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                n1: 640 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                 n1: 640 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                  n1: 640 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 640 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                    n1: 640 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                     n1: 640 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                      n1: 640 0x205B06: {closure#1} (rt.rs:174)
                       n1: 640 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                        n1: 640 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                         n1: 640 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                          n1: 640 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                           n1: 640 0x124439: std::rt::lang_start (rt.rs:194)
                            n0: 640 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
 n0: 1146 in 16 places, all below massif's threshold (1.00%)
 n1: 472 0x1A3DCC: alloc::alloc::alloc (alloc.rs:99)
  n1: 472 0x1A3F0C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 472 0x1A4028: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:257)
    n1: 472 0x1A3721: do_alloc<alloc::alloc::Global> (alloc.rs:15)
     n1: 472 0x1A3721: hashbrown::raw::RawTableInner::new_uninitialized (mod.rs:1534)
      n1: 472 0x16DB7D: hashbrown::raw::RawTable<T,A>::new_uninitialized (mod.rs:719)
       n1: 472 0x16AB8F: <hashbrown::raw::RawTable<T,A> as core::clone::Clone>::clone (mod.rs:3215)
        n1: 472 0x188E65: <hashbrown::map::HashMap<K,V,S,A> as core::clone::Clone>::clone (map.rs:194)
         n1: 472 0x17C06C: <std::collections::hash::map::HashMap<K,V,S> as core::clone::Clone>::clone (map.rs:1333)
          n1: 472 0x17747A: opentelemetry_sdk::resource::Resource::merge (mod.rs:179)
           n1: 472 0x177B75: opentelemetry_sdk::resource::ResourceBuilder::with_attributes (mod.rs:293)
            n1: 472 0x16661A: opentelemetry_sdk::resource::ResourceBuilder::with_attribute (mod.rs:288)
             n1: 472 0x12A4F6: opentelemetry_sdk::resource::ResourceBuilder::with_service_name (mod.rs:299)
              n1: 472 0x14B61A: batch_processor::main (main.rs:22)
               n1: 472 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                n1: 472 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                 n1: 472 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                  n1: 472 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                   n1: 472 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                    n1: 472 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                     n1: 472 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                      n1: 472 0x205B06: {closure#1} (rt.rs:174)
                       n1: 472 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                        n1: 472 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                         n1: 472 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                          n1: 472 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                           n1: 472 0x124439: std::rt::lang_start (rt.rs:194)
                            n0: 472 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
 n1: 472 0x1A88DC: alloc::alloc::alloc (alloc.rs:99)
  n1: 472 0x1A8A1C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 472 0x1A8BC8: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc.rs:257)
    n1: 472 0x1A95A1: do_alloc<alloc::alloc::Global> (alloc.rs:15)
     n1: 472 0x1A95A1: hashbrown::raw::RawTableInner::new_uninitialized (mod.rs:1534)
      n1: 472 0x1A992B: hashbrown::raw::RawTableInner::fallible_with_capacity (mod.rs:1572)
       n1: 472 0x16BEEE: prepare_resize<alloc::alloc::Global> (mod.rs:2633)
        n1: 472 0x16BEEE: resize_inner<alloc::alloc::Global> (mod.rs:2829)
         n1: 472 0x16BEEE: reserve_rehash_inner<alloc::alloc::Global> (mod.rs:2719)
          n1: 472 0x16BEEE: hashbrown::raw::RawTable<T,A>::reserve_rehash (mod.rs:1045)
           n1: 472 0x16E5C4: hashbrown::raw::RawTable<T,A>::reserve (mod.rs:993)
            n1: 472 0x16DDAD: hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot (mod.rs:1206)
             n1: 472 0x1891F7: find_or_find_insert_slot<opentelemetry::common::Key, opentelemetry::common::Value, std::hash::random::RandomState, alloc::alloc::Global, opentelemetry::common::Key> (map.rs:1810)
              n1: 472 0x1891F7: hashbrown::map::HashMap<K,V,S,A>::insert (map.rs:1790)
               n2: 472 0x17BFB6: std::collections::hash::map::HashMap<K,V,S>::insert (map.rs:1169)
                n1: 472 0x16641A: opentelemetry_sdk::resource::Resource::from_detectors (mod.rs:150)
                 n2: 472 0x16604B: opentelemetry_sdk::resource::Resource::builder (mod.rs:64)
                  n1: 472 0x14C6B6: <opentelemetry_stdout::logs::exporter::LogExporter as core::default::Default>::default (exporter.rs:19)
                   n1: 472 0x14B43F: batch_processor::main (main.rs:10)
                    n1: 472 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                     n1: 472 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                      n1: 472 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                       n1: 472 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                        n1: 472 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                         n1: 472 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                          n1: 472 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                           n1: 472 0x205B06: {closure#1} (rt.rs:174)
                            n1: 472 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                             n1: 472 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                              n1: 472 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                               n1: 472 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                n1: 472 0x124439: std::rt::lang_start (rt.rs:194)
                                 n0: 472 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
                  n0: 0 in 2 places, all below massif's threshold (1.00%)
                n0: 0 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=7
#-----------
time=87120
mem_heap_B=70954
mem_heap_extra_B=438
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=8
#-----------
time=94248
mem_heap_B=75800
mem_heap_extra_B=1088
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=99768
mem_heap_B=79224
mem_heap_extra_B=1552
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=10
#-----------
time=107128
mem_heap_B=83792
mem_heap_extra_B=2168
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=110808
mem_heap_B=86076
mem_heap_extra_B=2476
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=117248
mem_heap_B=90073
mem_heap_extra_B=3015
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=124608
mem_heap_B=94641
mem_heap_extra_B=3631
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=128288
mem_heap_B=96925
mem_heap_extra_B=3939
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=131968
mem_heap_B=99209
mem_heap_extra_B=4247
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=135648
mem_heap_B=101493
mem_heap_extra_B=4555
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=139328
mem_heap_B=103777
mem_heap_extra_B=4863
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=143928
mem_heap_B=106632
mem_heap_extra_B=5248
mem_stacks_B=0
heap_tree=detailed
n5: 106632 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68176 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 592 in 1 place, below massif's threshold (1.00%)
 n1: 32464 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 32464 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 32464 0x189650: allocate (alloc.rs:257)
    n2: 32464 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 32208 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 32208 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 32208 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 32208 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 32208 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 32208 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 32208 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 32208 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 32208 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 32208 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 32208 0x14C15C: batch_processor::main (main.rs:31)
                n1: 32208 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 32208 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 32208 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 32208 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 32208 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 32208 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 32208 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 32208 0x205B06: {closure#1} (rt.rs:174)
                        n1: 32208 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 32208 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 32208 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 32208 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 32208 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 32208 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 2064 0x226BC5: alloc (alloc.rs:99)
  n1: 2064 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2064 0x226BC5: allocate (alloc.rs:257)
    n1: 2064 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2064 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2064 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2064 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2064 0x226BC5: from<u8> (convert.rs:108)
         n1: 2064 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2064 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2064 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2064 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2064 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2064 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2064 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2064 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2064 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2064 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2064 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2064 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2064 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2064 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2064 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2064 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2064 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2064 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2064 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2064 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2064 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2064 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2064 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2064 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2064 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2064 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2064 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2064 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2064 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2064 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2064 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2064 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2064 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2064 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2064 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2064 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2064 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2064 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2064 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2064 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=19
#-----------
time=147608
mem_heap_B=108916
mem_heap_extra_B=5556
mem_stacks_B=0
heap_tree=detailed
n5: 108916 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68212 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 628 in 1 place, below massif's threshold (1.00%)
 n1: 34576 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 34576 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 34576 0x189650: allocate (alloc.rs:257)
    n2: 34576 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 34320 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 34320 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 34320 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 34320 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 34320 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 34320 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 34320 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 34320 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 34320 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 34320 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 34320 0x14C15C: batch_processor::main (main.rs:31)
                n1: 34320 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 34320 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 34320 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 34320 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 34320 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 34320 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 34320 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 34320 0x205B06: {closure#1} (rt.rs:174)
                        n1: 34320 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 34320 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 34320 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 34320 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 34320 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 34320 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 2200 0x226BC5: alloc (alloc.rs:99)
  n1: 2200 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2200 0x226BC5: allocate (alloc.rs:257)
    n1: 2200 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2200 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2200 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2200 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2200 0x226BC5: from<u8> (convert.rs:108)
         n1: 2200 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2200 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2200 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2200 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2200 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2200 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2200 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2200 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2200 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2200 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2200 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2200 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2200 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2200 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2200 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2200 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2200 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2200 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2200 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2200 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2200 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2200 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2200 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2200 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2200 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2200 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2200 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2200 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2200 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2200 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2200 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2200 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2200 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2200 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2200 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2200 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2200 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2200 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2200 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2200 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=20
#-----------
time=151288
mem_heap_B=111200
mem_heap_extra_B=5864
mem_stacks_B=0
heap_tree=detailed
n5: 111200 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68248 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 664 in 1 place, below massif's threshold (1.00%)
 n1: 36688 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 36688 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 36688 0x189650: allocate (alloc.rs:257)
    n2: 36688 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 36432 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 36432 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 36432 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 36432 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 36432 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 36432 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 36432 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 36432 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 36432 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 36432 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 36432 0x14C15C: batch_processor::main (main.rs:31)
                n1: 36432 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 36432 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 36432 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 36432 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 36432 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 36432 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 36432 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 36432 0x205B06: {closure#1} (rt.rs:174)
                        n1: 36432 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 36432 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 36432 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 36432 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 36432 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 36432 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 2336 0x226BC5: alloc (alloc.rs:99)
  n1: 2336 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2336 0x226BC5: allocate (alloc.rs:257)
    n1: 2336 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2336 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2336 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2336 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2336 0x226BC5: from<u8> (convert.rs:108)
         n1: 2336 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2336 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2336 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2336 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2336 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2336 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2336 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2336 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2336 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2336 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2336 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2336 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2336 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2336 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2336 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2336 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2336 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2336 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2336 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2336 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2336 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2336 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2336 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2336 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2336 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2336 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2336 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2336 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2336 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2336 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2336 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2336 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2336 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2336 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2336 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2336 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2336 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2336 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2336 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2336 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=21
#-----------
time=154968
mem_heap_B=113484
mem_heap_extra_B=6172
mem_stacks_B=0
heap_tree=detailed
n5: 113484 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68284 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 700 in 1 place, below massif's threshold (1.00%)
 n1: 38800 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 38800 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 38800 0x189650: allocate (alloc.rs:257)
    n2: 38800 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 38544 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 38544 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 38544 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 38544 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 38544 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 38544 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 38544 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 38544 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 38544 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 38544 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 38544 0x14C15C: batch_processor::main (main.rs:31)
                n1: 38544 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 38544 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 38544 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 38544 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 38544 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 38544 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 38544 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 38544 0x205B06: {closure#1} (rt.rs:174)
                        n1: 38544 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 38544 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 38544 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 38544 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 38544 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 38544 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 2472 0x226BC5: alloc (alloc.rs:99)
  n1: 2472 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2472 0x226BC5: allocate (alloc.rs:257)
    n1: 2472 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2472 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2472 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2472 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2472 0x226BC5: from<u8> (convert.rs:108)
         n1: 2472 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2472 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2472 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2472 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2472 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2472 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2472 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2472 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2472 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2472 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2472 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2472 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2472 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2472 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2472 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2472 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2472 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2472 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2472 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2472 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2472 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2472 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2472 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2472 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2472 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2472 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2472 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2472 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2472 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2472 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2472 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2472 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2472 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2472 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2472 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2472 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2472 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2472 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2472 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2472 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=22
#-----------
time=158648
mem_heap_B=115768
mem_heap_extra_B=6480
mem_stacks_B=0
heap_tree=detailed
n5: 115768 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68320 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 736 in 1 place, below massif's threshold (1.00%)
 n1: 40912 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 40912 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 40912 0x189650: allocate (alloc.rs:257)
    n2: 40912 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 40656 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 40656 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 40656 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 40656 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 40656 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 40656 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 40656 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 40656 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 40656 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 40656 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 40656 0x14C15C: batch_processor::main (main.rs:31)
                n1: 40656 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 40656 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 40656 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 40656 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 40656 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 40656 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 40656 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 40656 0x205B06: {closure#1} (rt.rs:174)
                        n1: 40656 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 40656 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 40656 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 40656 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 40656 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 40656 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 2608 0x226BC5: alloc (alloc.rs:99)
  n1: 2608 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2608 0x226BC5: allocate (alloc.rs:257)
    n1: 2608 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2608 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2608 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2608 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2608 0x226BC5: from<u8> (convert.rs:108)
         n1: 2608 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2608 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2608 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2608 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2608 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2608 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2608 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2608 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2608 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2608 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2608 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2608 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2608 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2608 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2608 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2608 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2608 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2608 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2608 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2608 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2608 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2608 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2608 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2608 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2608 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2608 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2608 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2608 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2608 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2608 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2608 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2608 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2608 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2608 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2608 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2608 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2608 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2608 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2608 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2608 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=23
#-----------
time=162328
mem_heap_B=118052
mem_heap_extra_B=6788
mem_stacks_B=0
heap_tree=detailed
n5: 118052 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68356 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 772 in 1 place, below massif's threshold (1.00%)
 n1: 43024 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 43024 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 43024 0x189650: allocate (alloc.rs:257)
    n2: 43024 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 42768 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 42768 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 42768 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 42768 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 42768 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 42768 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 42768 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 42768 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 42768 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 42768 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 42768 0x14C15C: batch_processor::main (main.rs:31)
                n1: 42768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 42768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 42768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 42768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 42768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 42768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 42768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 42768 0x205B06: {closure#1} (rt.rs:174)
                        n1: 42768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 42768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 42768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 42768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 42768 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 42768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n1: 2744 0x226BC5: alloc (alloc.rs:99)
  n1: 2744 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2744 0x226BC5: allocate (alloc.rs:257)
    n1: 2744 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2744 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2744 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2744 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2744 0x226BC5: from<u8> (convert.rs:108)
         n1: 2744 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2744 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2744 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2744 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2744 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2744 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2744 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2744 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2744 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2744 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2744 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2744 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2744 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2744 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2744 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2744 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2744 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2744 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2744 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2744 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2744 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2744 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2744 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2744 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2744 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2744 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2744 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2744 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2744 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2744 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2744 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2744 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2744 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2744 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2744 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2744 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2744 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2744 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2744 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2744 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=24
#-----------
time=166008
mem_heap_B=120336
mem_heap_extra_B=7096
mem_stacks_B=0
heap_tree=detailed
n5: 120336 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68392 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 808 in 1 place, below massif's threshold (1.00%)
 n1: 45136 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 45136 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 45136 0x189650: allocate (alloc.rs:257)
    n2: 45136 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 44880 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 44880 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 44880 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 44880 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 44880 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 44880 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 44880 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 44880 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 44880 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 44880 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 44880 0x14C15C: batch_processor::main (main.rs:31)
                n1: 44880 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 44880 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 44880 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 44880 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 44880 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 44880 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 44880 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 44880 0x205B06: {closure#1} (rt.rs:174)
                        n1: 44880 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 44880 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 44880 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 44880 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 44880 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 44880 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n1: 2880 0x226BC5: alloc (alloc.rs:99)
  n1: 2880 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2880 0x226BC5: allocate (alloc.rs:257)
    n1: 2880 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2880 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2880 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2880 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2880 0x226BC5: from<u8> (convert.rs:108)
         n1: 2880 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2880 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2880 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2880 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2880 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2880 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2880 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2880 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2880 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2880 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2880 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2880 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2880 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2880 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2880 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2880 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2880 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2880 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2880 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2880 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2880 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2880 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2880 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2880 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2880 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 2880 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2880 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2880 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2880 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2880 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2880 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2880 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2880 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2880 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2880 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2880 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2880 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2880 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2880 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2880 0x205B06: std::rt::lang_start_internal (rt.rs:174)
 n0: 2648 in 18 places, all below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=25
#-----------
time=169688
mem_heap_B=122620
mem_heap_extra_B=7404
mem_stacks_B=0
heap_tree=detailed
n4: 122620 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68428 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 844 in 1 place, below massif's threshold (1.00%)
 n1: 47248 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 47248 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 47248 0x189650: allocate (alloc.rs:257)
    n2: 47248 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 46992 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 46992 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 46992 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 46992 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 46992 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 46992 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 46992 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 46992 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 46992 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 46992 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 46992 0x14C15C: batch_processor::main (main.rs:31)
                n1: 46992 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 46992 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 46992 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 46992 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 46992 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 46992 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 46992 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 46992 0x205B06: {closure#1} (rt.rs:174)
                        n1: 46992 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 46992 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 46992 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 46992 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 46992 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 46992 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 3928 in 19 places, all below massif's threshold (1.00%)
 n1: 3016 0x226BC5: alloc (alloc.rs:99)
  n1: 3016 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 3016 0x226BC5: allocate (alloc.rs:257)
    n1: 3016 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 3016 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 3016 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 3016 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 3016 0x226BC5: from<u8> (convert.rs:108)
         n1: 3016 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 3016 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 3016 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 3016 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 3016 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 3016 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 3016 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 3016 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 3016 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 3016 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 3016 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 3016 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 3016 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 3016 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 3016 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 3016 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 3016 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 3016 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 3016 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 3016 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 3016 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 3016 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 3016 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 3016 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 3016 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 3016 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 3016 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 3016 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 3016 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 3016 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 3016 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 3016 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 3016 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 3016 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 3016 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 3016 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 3016 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 3016 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 3016 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 3016 0x205B06: std::rt::lang_start_internal (rt.rs:174)
#-----------
snapshot=26
#-----------
time=173368
mem_heap_B=124904
mem_heap_extra_B=7712
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=180192
mem_heap_B=129060
mem_heap_extra_B=8204
mem_stacks_B=0
heap_tree=detailed
n4: 129060 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 68484 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n2: 34816 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 900 in 1 place, below massif's threshold (1.00%)
 n1: 53056 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 53056 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 53056 0x189650: allocate (alloc.rs:257)
    n2: 53056 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 52800 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 52800 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 52800 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 52800 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 52800 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 52800 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 52800 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 52800 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 52800 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 52800 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 52800 0x14C15C: batch_processor::main (main.rs:31)
                n1: 52800 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 52800 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 52800 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 52800 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 52800 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 52800 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 52800 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 52800 0x205B06: {closure#1} (rt.rs:174)
                        n1: 52800 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 52800 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 52800 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 52800 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 52800 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 52800 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
     n0: 256 in 3 places, all below massif's threshold (1.00%)
 n0: 4130 in 19 places, all below massif's threshold (1.00%)
 n1: 3390 0x226BC5: alloc (alloc.rs:99)
  n1: 3390 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 3390 0x226BC5: allocate (alloc.rs:257)
    n1: 3390 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 3390 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 3390 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 3390 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 3390 0x226BC5: from<u8> (convert.rs:108)
         n1: 3390 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 3390 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 3390 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 3390 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 3390 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 3390 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 3390 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 3390 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 3390 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 3390 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 3390 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 3390 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 3390 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 3390 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 3390 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 3390 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 3390 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 3390 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 3390 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 3390 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 3390 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 3390 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 3390 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 3390 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 3390 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n1: 3390 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 3390 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 3390 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 3390 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 3390 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 3390 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 3390 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 3390 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 3390 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 3390 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 3390 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 3390 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 3390 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 3390 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 3390 0x205B06: std::rt::lang_start_internal (rt.rs:174)
#-----------
snapshot=28
#-----------
time=185616
mem_heap_B=133591
mem_heap_extra_B=8297
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=188496
mem_heap_B=134909
mem_heap_extra_B=8403
mem_stacks_B=0
heap_tree=peak
n4: 134909 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 72614 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n3: 38912 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (mod.rs:803)
     n1: 4096 0x12D55E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 4096 0x13E8C1: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:352)
       n1: 4096 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
        n1: 4096 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
         n1: 4096 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
          n1: 4096 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
           n1: 4096 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
            n1: 4096 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
             n1: 4096 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
              n1: 4096 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
               n1: 4096 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                n1: 4096 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                 n1: 4096 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                  n1: 4096 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                   n1: 4096 0x4A1DAA3: start_thread (pthread_create.c:447)
                    n0: 4096 0x4AAAA33: clone (clone.S:100)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 934 in 1 place, below massif's threshold (1.00%)
 n1: 54000 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 54000 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 54000 0x189650: allocate (alloc.rs:257)
    n2: 54000 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 53856 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 53856 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 53856 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 53856 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 53856 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 53856 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 53856 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 53856 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n2: 53856 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 52800 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 52800 0x14C15C: batch_processor::main (main.rs:31)
                n1: 52800 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 52800 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 52800 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 52800 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 52800 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 52800 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 52800 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 52800 0x205B06: {closure#1} (rt.rs:174)
                        n1: 52800 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 52800 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 52800 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 52800 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 52800 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 52800 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
              n0: 1056 in 2 places, all below massif's threshold (1.00%)
     n0: 144 in 3 places, all below massif's threshold (1.00%)
 n0: 4826 in 25 places, all below massif's threshold (1.00%)
 n1: 3469 0x226BC5: alloc (alloc.rs:99)
  n1: 3469 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 3469 0x226BC5: allocate (alloc.rs:257)
    n1: 3469 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 3469 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 3469 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 3469 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 3469 0x226BC5: from<u8> (convert.rs:108)
         n1: 3469 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 3469 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 3469 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 3469 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 3469 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 3469 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 3469 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 3469 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 3469 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 3469 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 3469 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 3469 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 3469 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 3469 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 3469 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 3469 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 3469 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 3469 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 3469 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 3469 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 3469 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 3469 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 3469 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 3469 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 3469 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n2: 3469 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 3390 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 3390 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 3390 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 3390 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 3390 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 3390 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 3390 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 3390 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 3390 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 3390 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 3390 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 3390 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 3390 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 3390 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                   n0: 79 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=30
#-----------
time=194040
mem_heap_B=134877
mem_heap_extra_B=8395
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=197752
mem_heap_B=134877
mem_heap_extra_B=8395
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=203432
mem_heap_B=133159
mem_heap_extra_B=8145
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=207320
mem_heap_B=129739
mem_heap_extra_B=7677
mem_stacks_B=0
heap_tree=detailed
n4: 129739 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 72533 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n3: 38912 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (mod.rs:803)
     n1: 4096 0x12D55E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 4096 0x13E8C1: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:352)
       n1: 4096 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
        n1: 4096 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
         n1: 4096 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
          n1: 4096 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
           n1: 4096 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
            n1: 4096 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
             n1: 4096 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
              n1: 4096 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
               n1: 4096 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                n1: 4096 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                 n1: 4096 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                  n1: 4096 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                   n1: 4096 0x4A1DAA3: start_thread (pthread_create.c:447)
                    n0: 4096 0x4AAAA33: clone (clone.S:100)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 853 in 1 place, below massif's threshold (1.00%)
 n1: 49248 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 49248 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 49248 0x189650: allocate (alloc.rs:257)
    n2: 49248 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 49104 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 49104 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 49104 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 49104 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 49104 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 49104 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 49104 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 49104 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n2: 49104 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 48048 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 48048 0x14C15C: batch_processor::main (main.rs:31)
                n1: 48048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 48048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 48048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 48048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 48048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 48048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 48048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 48048 0x205B06: {closure#1} (rt.rs:174)
                        n1: 48048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 48048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 48048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 48048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 48048 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 48048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
              n0: 1056 in 2 places, all below massif's threshold (1.00%)
     n0: 144 in 3 places, all below massif's threshold (1.00%)
 n0: 4786 in 25 places, all below massif's threshold (1.00%)
 n1: 3172 0x226BC5: alloc (alloc.rs:99)
  n1: 3172 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 3172 0x226BC5: allocate (alloc.rs:257)
    n1: 3172 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 3172 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 3172 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 3172 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 3172 0x226BC5: from<u8> (convert.rs:108)
         n1: 3172 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 3172 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 3172 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 3172 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 3172 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 3172 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 3172 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 3172 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 3172 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 3172 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 3172 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 3172 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 3172 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 3172 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 3172 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 3172 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 3172 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 3172 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 3172 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 3172 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 3172 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 3172 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 3172 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 3172 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 3172 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n2: 3172 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 3093 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 3093 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 3093 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 3093 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 3093 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 3093 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 3093 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 3093 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 3093 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 3093 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 3093 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 3093 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 3093 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 3093 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                   n0: 79 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=34
#-----------
time=211208
mem_heap_B=126314
mem_heap_extra_B=7214
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=215096
mem_heap_B=122888
mem_heap_extra_B=6752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=218984
mem_heap_B=119462
mem_heap_extra_B=6290
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=222872
mem_heap_B=116036
mem_heap_extra_B=5828
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=226760
mem_heap_B=112610
mem_heap_extra_B=5366
mem_stacks_B=0
heap_tree=detailed
n5: 112610 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 72263 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n3: 38912 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (mod.rs:803)
     n1: 4096 0x12D55E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 4096 0x13E8C1: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:352)
       n1: 4096 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
        n1: 4096 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
         n1: 4096 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
          n1: 4096 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
           n1: 4096 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
            n1: 4096 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
             n1: 4096 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
              n1: 4096 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
               n1: 4096 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                n1: 4096 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                 n1: 4096 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                  n1: 4096 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                   n1: 4096 0x4A1DAA3: start_thread (pthread_create.c:447)
                    n0: 4096 0x4AAAA33: clone (clone.S:100)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 583 in 1 place, below massif's threshold (1.00%)
 n1: 33408 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 33408 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 33408 0x189650: allocate (alloc.rs:257)
    n2: 33408 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 33264 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 33264 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 33264 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 33264 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 33264 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 33264 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 33264 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 33264 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n2: 33264 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 32208 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 32208 0x14C15C: batch_processor::main (main.rs:31)
                n1: 32208 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 32208 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 32208 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 32208 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 32208 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 32208 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 32208 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 32208 0x205B06: {closure#1} (rt.rs:174)
                        n1: 32208 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 32208 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 32208 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 32208 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 32208 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 32208 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
              n0: 1056 in 2 places, all below massif's threshold (1.00%)
     n0: 144 in 3 places, all below massif's threshold (1.00%)
 n0: 3506 in 24 places, all below massif's threshold (1.00%)
 n1: 2153 0x226BC5: alloc (alloc.rs:99)
  n1: 2153 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 2153 0x226BC5: allocate (alloc.rs:257)
    n1: 2153 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 2153 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 2153 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 2153 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 2153 0x226BC5: from<u8> (convert.rs:108)
         n1: 2153 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 2153 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 2153 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 2153 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 2153 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 2153 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 2153 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 2153 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 2153 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 2153 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 2153 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 2153 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 2153 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 2153 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 2153 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 2153 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 2153 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 2153 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 2153 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 2153 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 2153 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 2153 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 2153 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 2153 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 2153 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n2: 2153 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 2074 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 2074 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 2074 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 2074 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 2074 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 2074 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 2074 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 2074 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 2074 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 2074 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 2074 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 2074 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 2074 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 2074 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                   n0: 79 in 2 places, all below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
#-----------
snapshot=39
#-----------
time=230648
mem_heap_B=109184
mem_heap_extra_B=4904
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=234536
mem_heap_B=105758
mem_heap_extra_B=4442
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=41
#-----------
time=238424
mem_heap_B=102332
mem_heap_extra_B=3980
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=242312
mem_heap_B=98906
mem_heap_extra_B=3518
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=246200
mem_heap_B=95480
mem_heap_extra_B=3056
mem_stacks_B=0
heap_tree=detailed
n7: 95480 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 71993 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n3: 38912 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (mod.rs:803)
     n1: 4096 0x12D55E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 4096 0x13E8C1: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:352)
       n1: 4096 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
        n1: 4096 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
         n1: 4096 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
          n1: 4096 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
           n1: 4096 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
            n1: 4096 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
             n1: 4096 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
              n1: 4096 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
               n1: 4096 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                n1: 4096 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                 n1: 4096 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                  n1: 4096 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                   n1: 4096 0x4A1DAA3: start_thread (pthread_create.c:447)
                    n0: 4096 0x4AAAA33: clone (clone.S:100)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 313 in 1 place, below massif's threshold (1.00%)
 n1: 17568 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 17568 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 17568 0x189650: allocate (alloc.rs:257)
    n2: 17568 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 17424 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 17424 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 17424 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 17424 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 17424 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 17424 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 17424 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 17424 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n2: 17424 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n1: 16368 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
               n1: 16368 0x14C15C: batch_processor::main (main.rs:31)
                n1: 16368 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                 n1: 16368 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                  n1: 16368 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                   n1: 16368 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                    n1: 16368 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                     n1: 16368 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                      n1: 16368 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                       n1: 16368 0x205B06: {closure#1} (rt.rs:174)
                        n1: 16368 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                         n1: 16368 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                          n1: 16368 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                           n1: 16368 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                            n1: 16368 0x124439: std::rt::lang_start (rt.rs:194)
                             n0: 16368 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
              n0: 1056 in 2 places, all below massif's threshold (1.00%)
     n0: 144 in 3 places, all below massif's threshold (1.00%)
 n0: 1442 in 22 places, all below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
 n1: 1133 0x226BC5: alloc (alloc.rs:99)
  n1: 1133 0x226BC5: alloc_impl (alloc.rs:195)
   n1: 1133 0x226BC5: allocate (alloc.rs:257)
    n1: 1133 0x226BC5: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 1133 0x226BC5: with_capacity (raw_vec.rs:153)
      n1: 1133 0x226BC5: with_capacity<u8> (raw_vec.rs:131)
       n1: 1133 0x226BC5: from_slice<u8> (convert.rs:82)
        n1: 1133 0x226BC5: from<u8> (convert.rs:108)
         n1: 1133 0x226BC5: into<&[u8], alloc::boxed::Box<[u8], alloc::alloc::Global>> (mod.rs:759)
          n1: 1133 0x226BC5: <alloc::boxed::Box<str> as core::clone::Clone>::clone (boxed.rs:1810)
           n1: 1133 0x17617B: <opentelemetry::common::OtelString as core::clone::Clone>::clone (common.rs:113)
            n1: 1133 0x17621C: <opentelemetry::common::StringValue as core::clone::Clone>::clone (common.rs:235)
             n1: 1133 0x190970: <opentelemetry::logs::record::AnyValue as core::clone::Clone>::clone (record.rs:78)
              n1: 1133 0x171F26: core::clone::Clone::clone (clone.rs:165)
               n1: 1133 0x17BB4D: <core::option::Option<T> as core::clone::Clone>::clone (option.rs:2033)
                n1: 1133 0x1925D6: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (cloned.rs:154)
                 n1: 1133 0x1767C7: <core::iter::adapters::map::Map<I,F> as core::iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked (map.rs:205)
                  n1: 1133 0x18788A: core::array::try_from_trusted_iterator::next::{{closure}} (mod.rs:815)
                   n1: 1133 0x1875E0: core::array::try_from_fn_erased (mod.rs:846)
                    n1: 1133 0x18715D: core::array::try_from_fn (mod.rs:130)
                     n1: 1133 0x187777: core::array::try_from_trusted_iterator (mod.rs:819)
                      n1: 1133 0x17AC7B: from_trusted_iterator<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>, 5, core::iter::adapters::cloned::Cloned<core::slice::iter::Iter<core::option::Option<(opentelemetry::common::Key, opentelemetry::logs::record::AnyValue)>>>> (mod.rs:799)
                       n1: 1133 0x17AC7B: <T as core::array::SpecArrayClone>::clone (mod.rs:447)
                        n1: 1133 0x17ACB6: core::array::<impl core::clone::Clone for [T; N]>::clone (mod.rs:431)
                         n1: 1133 0x17591B: <opentelemetry_sdk::growable_array::GrowableArray<T,_,_> as core::clone::Clone>::clone (growable_array.rs:19)
                          n1: 1133 0x168A06: <opentelemetry_sdk::logs::record::SdkLogRecord as core::clone::Clone>::clone (record.rs:51)
                           n1: 1133 0x180D9B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
                            n1: 1133 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
                             n1: 1133 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
                              n1: 1133 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
                               n1: 1133 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
                                n1: 1133 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
                                 n1: 1133 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
                                  n2: 1133 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
                                   n1: 1054 0x14B3E5: batch_processor::main::{{closure}} (macros.rs:658)
                                    n1: 1054 0x14C15C: batch_processor::main (main.rs:31)
                                     n1: 1054 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                                      n1: 1054 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                       n1: 1054 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                                        n1: 1054 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                                         n1: 1054 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                                          n1: 1054 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                                           n1: 1054 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                                            n1: 1054 0x205B06: {closure#1} (rt.rs:174)
                                             n1: 1054 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                                              n1: 1054 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                                               n1: 1054 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                                                n0: 1054 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                                   n0: 79 in 2 places, all below massif's threshold (1.00%)
 n1: 1040 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
  n1: 1040 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 1040 0x145D90: allocate (alloc.rs:257)
    n1: 1040 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
     n0: 1040 in 5 places, all below massif's threshold (1.00%)
 n1: 1024 0x20B4B1: alloc (alloc.rs:99)
  n1: 1024 0x20B4B1: alloc_impl (alloc.rs:195)
   n1: 1024 0x20B4B1: allocate (alloc.rs:257)
    n1: 1024 0x20B4B1: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 1024 0x20B4B1: with_capacity_in<alloc::alloc::Global> (raw_vec.rs:423)
      n1: 1024 0x20B4B1: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:194)
       n1: 1024 0x20B4B1: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:803)
        n1: 1024 0x20B4B1: with_capacity<u8> (mod.rs:483)
         n1: 1024 0x20B4B1: with_capacity<std::io::stdio::StdoutRaw> (bufwriter.rs:122)
          n1: 1024 0x20B4B1: with_capacity<std::io::stdio::StdoutRaw> (linewriter.rs:110)
           n1: 1024 0x20B4B1: new<std::io::stdio::StdoutRaw> (linewriter.rs:90)
            n1: 1024 0x20B4B1: {closure#0} (stdio.rs:677)
             n1: 1024 0x20B4B1: {closure#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}> (once_lock.rs:304)
              n1: 1024 0x20B4B1: {closure#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !> (once_lock.rs:512)
               n1: 1024 0x20B4B1: std::sync::once::Once::call_once_force::{{closure}} (once.rs:217)
                n1: 1024 0x122E73: std::sys::sync::once::futex::Once::call (futex.rs:176)
                 n1: 1024 0x1228EE: call_once_force<std::sync::once_lock::{impl#0}::initialize::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !>> (once.rs:217)
                  n1: 1024 0x1228EE: std::sync::once_lock::OnceLock<T>::initialize (once_lock.rs:511)
                   n1: 1024 0x208C23: get_or_try_init<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !> (once_lock.rs:390)
                    n1: 1024 0x208C23: get_or_init<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}> (once_lock.rs:304)
                     n1: 1024 0x208C23: stdout (stdio.rs:677)
                      n1: 1024 0x208C23: print_to<std::io::stdio::Stdout> (stdio.rs:1122)
                       n1: 1024 0x208C23: std::io::stdio::_print (stdio.rs:1232)
                        n1: 1024 0x130A5D: <opentelemetry_stdout::logs::exporter::LogExporter as opentelemetry_sdk::logs::export::LogExporter>::export::{{closure}} (exporter.rs:43)
                         n1: 1024 0x14645E: futures_executor::local_pool::block_on::{{closure}} (local_pool.rs:316)
                          n1: 1024 0x1462FD: futures_executor::local_pool::run_executor::{{closure}} (local_pool.rs:90)
                           n1: 1024 0x131422: std::thread::local::LocalKey<T>::try_with (local.rs:283)
                            n1: 1024 0x130EC0: std::thread::local::LocalKey<T>::with (local.rs:260)
                             n1: 1024 0x146257: futures_executor::local_pool::run_executor (local_pool.rs:86)
                              n1: 1024 0x1463EB: futures_executor::local_pool::block_on (local_pool.rs:316)
                               n1: 1024 0x14228E: opentelemetry_sdk::logs::batch_log_processor::export_batch_sync (batch_log_processor.rs:527)
                                n1: 1024 0x141ED0: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}}::get_logs_and_export (batch_log_processor.rs:386)
                                 n1: 1024 0x140F4B: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:458)
                                  n1: 1024 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                   n1: 1024 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
                                    n1: 1024 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
                                     n1: 1024 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
                                      n1: 1024 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
                                       n1: 1024 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
                                        n1: 1024 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
                                         n1: 1024 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
                                          n1: 1024 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                                           n1: 1024 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                                            n1: 1024 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                                             n1: 1024 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                                              n1: 1024 0x4A1DAA3: start_thread (pthread_create.c:447)
                                               n0: 1024 0x4AAAA33: clone (clone.S:100)
#-----------
snapshot=44
#-----------
time=250088
mem_heap_B=92054
mem_heap_extra_B=2594
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=253976
mem_heap_B=88628
mem_heap_extra_B=2132
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=257864
mem_heap_B=85202
mem_heap_extra_B=1670
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=261752
mem_heap_B=81776
mem_heap_extra_B=1208
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=265640
mem_heap_B=78350
mem_heap_extra_B=746
mem_stacks_B=0
heap_tree=detailed
n6: 78350 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n3: 71723 0x21C912: alloc::raw_vec::RawVecInner<A>::try_allocate_in (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n3: 38912 0x15A7CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x12D02D: with_capacity_in<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x12D02D: with_capacity<std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>> (mod.rs:483)
      n1: 32768 0x12D02D: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 32768 0x12F739: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 32768 0x12F5BB: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 32768 0x13BAC0: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 32768 0x126D44: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 32768 0x1394F4: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 32768 0x1394F4: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 32768 0x146D5D: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 32768 0x145AFB: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 32768 0x13D867: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:335)
                n1: 32768 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 32768 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                          n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
   n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 4096 0x12D55E: with_capacity_in<alloc::boxed::Box<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope), alloc::alloc::Global>, alloc::alloc::Global> (mod.rs:803)
     n1: 4096 0x12D55E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 4096 0x13E8C1: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:352)
       n1: 4096 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
        n1: 4096 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
         n1: 4096 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
          n1: 4096 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
           n1: 4096 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
            n1: 4096 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
             n1: 4096 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
              n1: 4096 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
               n1: 4096 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                n1: 4096 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                 n1: 4096 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                  n1: 4096 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                   n1: 4096 0x4A1DAA3: start_thread (pthread_create.c:447)
                    n0: 4096 0x4AAAA33: clone (clone.S:100)
   n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 2048 0x12D3AD: with_capacity_in<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>, alloc::alloc::Global> (mod.rs:803)
     n1: 2048 0x12D3AD: with_capacity<std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>> (mod.rs:483)
      n1: 2048 0x12D3AD: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (spec_from_iter_nested.rs:54)
       n1: 2048 0x12F769: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (spec_from_iter.rs:34)
        n1: 2048 0x12F67B: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (mod.rs:3412)
         n1: 2048 0x13BB00: core::iter::traits::iterator::Iterator::collect (iterator.rs:1971)
          n1: 2048 0x126DC4: alloc::boxed::iter::<impl core::iter::traits::collect::FromIterator<I> for alloc::boxed::Box<[I]>>::from_iter (iter.rs:144)
           n1: 2048 0x139014: collect<core::iter::adapters::map::Map<core::ops::range::Range<usize>, std::sync::mpmc::array::{impl#1}::with_capacity::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>>, alloc::boxed::Box<[std::sync::mpmc::array::Slot<opentelemetry_sdk::logs::batch_log_processor::BatchMessage>], alloc::alloc::Global>> (iterator.rs:1971)
            n1: 2048 0x139014: std::sync::mpmc::array::Channel<T>::with_capacity (array.rs:109)
             n1: 2048 0x1470FD: std::sync::mpmc::sync_channel (mod.rs:256)
              n1: 2048 0x145B6B: std::sync::mpsc::sync_channel (mod.rs:576)
               n1: 2048 0x13D8F4: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new (batch_log_processor.rs:336)
                n1: 2048 0x142CBE: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessorBuilder<E>::build (batch_log_processor.rs:564)
                 n1: 2048 0x14B57C: batch_processor::main (main.rs:11)
                  n1: 2048 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
                   n1: 2048 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                    n1: 2048 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
                     n1: 2048 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                      n1: 2048 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                       n1: 2048 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                        n1: 2048 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                         n1: 2048 0x205B06: {closure#1} (rt.rs:174)
                          n1: 2048 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                           n1: 2048 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                            n1: 2048 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                             n1: 2048 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                              n1: 2048 0x124439: std::rt::lang_start (rt.rs:194)
                               n0: 2048 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n1: 32768 0x1C18CD: alloc::raw_vec::RawVecInner<A>::with_capacity_in (raw_vec.rs:423)
   n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (raw_vec.rs:194)
    n1: 32768 0x1C646E: with_capacity_in<sharded_slab::shard::Ptr<tracing_subscriber::registry::sharded::DataInner, sharded_slab::cfg::DefaultConfig>, alloc::alloc::Global> (mod.rs:803)
     n1: 32768 0x1C646E: alloc::vec::Vec<T>::with_capacity (mod.rs:483)
      n1: 32768 0x1B381F: sharded_slab::shard::Array<T,C>::new (shard.rs:273)
       n1: 32768 0x1C25AD: sharded_slab::pool::Pool<T>::new_with_config (pool.rs:394)
        n1: 32768 0x1C25ED: sharded_slab::pool::Pool<T>::new (pool.rs:387)
         n1: 32768 0x1BD68D: <tracing_subscriber::registry::sharded::Registry as core::default::Default>::default (sharded.rs:138)
          n1: 32768 0x1BFABD: tracing_subscriber::registry (lib.rs:245)
           n1: 32768 0x14B746: batch_processor::main (main.rs:27)
            n1: 32768 0x131DAA: core::ops::function::FnOnce::call_once (function.rs:250)
             n1: 32768 0x12478D: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
              n1: 32768 0x124460: std::rt::lang_start::{{closure}} (rt.rs:195)
               n1: 32768 0x205B06: call_once<(), (dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (function.rs:284)
                n1: 32768 0x205B06: do_call<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panicking.rs:557)
                 n1: 32768 0x205B06: try<i32, &(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe)> (panicking.rs:520)
                  n1: 32768 0x205B06: catch_unwind<&(dyn core::ops::function::Fn<(), Output=i32> + core::marker::Sync + core::panic::unwind_safe::RefUnwindSafe), i32> (panic.rs:358)
                   n1: 32768 0x205B06: {closure#1} (rt.rs:174)
                    n1: 32768 0x205B06: do_call<std::rt::lang_start_internal::{closure_env#1}, isize> (panicking.rs:557)
                     n1: 32768 0x205B06: try<isize, std::rt::lang_start_internal::{closure_env#1}> (panicking.rs:520)
                      n1: 32768 0x205B06: catch_unwind<std::rt::lang_start_internal::{closure_env#1}, isize> (panic.rs:358)
                       n1: 32768 0x205B06: std::rt::lang_start_internal (rt.rs:174)
                        n1: 32768 0x124439: std::rt::lang_start (rt.rs:194)
                         n0: 32768 0x14C1DD: main (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
  n0: 43 in 1 place, below massif's threshold (1.00%)
 n1: 1728 0x18971C: alloc::alloc::alloc (alloc.rs:99)
  n1: 1728 0x18985C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 1728 0x189650: allocate (alloc.rs:257)
    n2: 1728 0x189650: alloc::alloc::exchange_malloc (alloc.rs:352)
     n1: 1584 0x180E6B: new<(opentelemetry_sdk::logs::record::SdkLogRecord, opentelemetry::common::InstrumentationScope)> (boxed.rs:256)
      n1: 1584 0x180E6B: <opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor as opentelemetry_sdk::logs::log_processor::LogProcessor>::emit (batch_log_processor.rs:159)
       n1: 1584 0x167B04: <opentelemetry_sdk::logs::logger::SdkLogger as opentelemetry::logs::logger::Logger>::emit (logger.rs:56)
        n1: 1584 0x12BB42: <opentelemetry_appender_tracing::layer::OpenTelemetryTracingBridge<P,L> as tracing_subscriber::layer::Layer<S>>::on_event (layer.rs:204)
         n1: 1584 0x14AA54: <tracing_subscriber::layer::layered::Layered<L,S> as tracing_core::subscriber::Subscriber>::event (layered.rs:153)
          n1: 1584 0x1E7714: tracing_core::dispatcher::Dispatch::event (dispatcher.rs:613)
           n1: 1584 0x1DFFA0: tracing_core::event::Event::dispatch::{{closure}} (event.rs:35)
            n1: 1584 0x1E6FD0: tracing_core::dispatcher::get_default (dispatcher.rs:389)
             n1: 1584 0x1DFF78: tracing_core::event::Event::dispatch (event.rs:34)
              n0: 1584 in 3 places, all below massif's threshold (1.00%)
     n0: 144 in 3 places, all below massif's threshold (1.00%)
 n0: 1555 in 23 places, all below massif's threshold (1.00%)
 n1: 1280 0x20C05D: aligned_malloc (unix.rs:85)
  n1: 1280 0x20C05D: alloc (unix.rs:28)
   n1: 1280 0x20C05D: __rdl_alloc (alloc.rs:401)
    n1: 1280 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
     n1: 1280 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
      n1: 1280 0x145D90: allocate (alloc.rs:257)
       n1: 1280 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
        n0: 1280 in 2 places, all below massif's threshold (1.00%)
 n1: 1040 0x145E5C: alloc::alloc::alloc (alloc.rs:99)
  n1: 1040 0x145F9C: alloc::alloc::Global::alloc_impl (alloc.rs:195)
   n1: 1040 0x145D90: allocate (alloc.rs:257)
    n1: 1040 0x145D90: alloc::alloc::exchange_malloc (alloc.rs:352)
     n0: 1040 in 5 places, all below massif's threshold (1.00%)
 n1: 1024 0x20B4B1: alloc (alloc.rs:99)
  n1: 1024 0x20B4B1: alloc_impl (alloc.rs:195)
   n1: 1024 0x20B4B1: allocate (alloc.rs:257)
    n1: 1024 0x20B4B1: try_allocate_in<alloc::alloc::Global> (raw_vec.rs:477)
     n1: 1024 0x20B4B1: with_capacity_in<alloc::alloc::Global> (raw_vec.rs:423)
      n1: 1024 0x20B4B1: with_capacity_in<u8, alloc::alloc::Global> (raw_vec.rs:194)
       n1: 1024 0x20B4B1: with_capacity_in<u8, alloc::alloc::Global> (mod.rs:803)
        n1: 1024 0x20B4B1: with_capacity<u8> (mod.rs:483)
         n1: 1024 0x20B4B1: with_capacity<std::io::stdio::StdoutRaw> (bufwriter.rs:122)
          n1: 1024 0x20B4B1: with_capacity<std::io::stdio::StdoutRaw> (linewriter.rs:110)
           n1: 1024 0x20B4B1: new<std::io::stdio::StdoutRaw> (linewriter.rs:90)
            n1: 1024 0x20B4B1: {closure#0} (stdio.rs:677)
             n1: 1024 0x20B4B1: {closure#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}> (once_lock.rs:304)
              n1: 1024 0x20B4B1: {closure#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !> (once_lock.rs:512)
               n1: 1024 0x20B4B1: std::sync::once::Once::call_once_force::{{closure}} (once.rs:217)
                n1: 1024 0x122E73: std::sys::sync::once::futex::Once::call (futex.rs:176)
                 n1: 1024 0x1228EE: call_once_force<std::sync::once_lock::{impl#0}::initialize::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !>> (once.rs:217)
                  n1: 1024 0x1228EE: std::sync::once_lock::OnceLock<T>::initialize (once_lock.rs:511)
                   n1: 1024 0x208C23: get_or_try_init<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::sync::once_lock::{impl#0}::get_or_init::{closure_env#0}<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}>, !> (once_lock.rs:390)
                    n1: 1024 0x208C23: get_or_init<std::sync::reentrant_lock::ReentrantLock<core::cell::RefCell<std::io::buffered::linewriter::LineWriter<std::io::stdio::StdoutRaw>>>, std::io::stdio::stdout::{closure_env#0}> (once_lock.rs:304)
                     n1: 1024 0x208C23: stdout (stdio.rs:677)
                      n1: 1024 0x208C23: print_to<std::io::stdio::Stdout> (stdio.rs:1122)
                       n1: 1024 0x208C23: std::io::stdio::_print (stdio.rs:1232)
                        n1: 1024 0x130A5D: <opentelemetry_stdout::logs::exporter::LogExporter as opentelemetry_sdk::logs::export::LogExporter>::export::{{closure}} (exporter.rs:43)
                         n1: 1024 0x14645E: futures_executor::local_pool::block_on::{{closure}} (local_pool.rs:316)
                          n1: 1024 0x1462FD: futures_executor::local_pool::run_executor::{{closure}} (local_pool.rs:90)
                           n1: 1024 0x131422: std::thread::local::LocalKey<T>::try_with (local.rs:283)
                            n1: 1024 0x130EC0: std::thread::local::LocalKey<T>::with (local.rs:260)
                             n1: 1024 0x146257: futures_executor::local_pool::run_executor (local_pool.rs:86)
                              n1: 1024 0x1463EB: futures_executor::local_pool::block_on (local_pool.rs:316)
                               n1: 1024 0x14228E: opentelemetry_sdk::logs::batch_log_processor::export_batch_sync (batch_log_processor.rs:527)
                                n1: 1024 0x141ED0: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}}::get_logs_and_export (batch_log_processor.rs:386)
                                 n1: 1024 0x140F4B: opentelemetry_sdk::logs::batch_log_processor::BatchLogProcessor::new::{{closure}} (batch_log_processor.rs:458)
                                  n1: 1024 0x1247B5: std::sys::backtrace::__rust_begin_short_backtrace (backtrace.rs:154)
                                   n1: 1024 0x1441E2: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (mod.rs:561)
                                    n1: 1024 0x14C5E2: <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once (unwind_safe.rs:272)
                                     n1: 1024 0x12B0DE: std::panicking::try::do_call (panicking.rs:557)
                                      n1: 1024 0x1444AA: __rust_try (in /home/shunpoco/Documents/oss/forks/opentelemetry-rust/target/debug/batch-processor)
                                       n1: 1024 0x143F69: try<(), core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>> (panicking.rs:520)
                                        n1: 1024 0x143F69: catch_unwind<core::panic::unwind_safe::AssertUnwindSafe<std::thread::{impl#0}::spawn_unchecked_::{closure#1}::{closure_env#0}<opentelemetry_sdk::logs::batch_log_processor::{impl#2}::new::{closure_env#0}<opentelemetry_stdout::logs::exporter::LogExporter>, ()>>, ()> (panic.rs:358)
                                         n1: 1024 0x143F69: std::thread::Builder::spawn_unchecked_::{{closure}} (mod.rs:559)
                                          n1: 1024 0x131D4D: core::ops::function::FnOnce::call_once{{vtable.shim}} (function.rs:250)
                                           n1: 1024 0x20E9FA: call_once<(), dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global> (boxed.rs:1972)
                                            n1: 1024 0x20E9FA: call_once<(), alloc::boxed::Box<dyn core::ops::function::FnOnce<(), Output=()>, alloc::alloc::Global>, alloc::alloc::Global> (boxed.rs:1972)
                                             n1: 1024 0x20E9FA: std::sys::pal::unix::thread::Thread::new::thread_start (thread.rs:105)
                                              n1: 1024 0x4A1DAA3: start_thread (pthread_create.c:447)
                                               n0: 1024 0x4AAAA33: clone (clone.S:100)
#-----------
snapshot=49
#-----------
time=271808
mem_heap_B=77466
mem_heap_extra_B=694
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=277584
mem_heap_B=74539
mem_heap_extra_B=789
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=51
#-----------
time=280528
mem_heap_B=72176
mem_heap_extra_B=416
mem_stacks_B=0
heap_tree=empty
